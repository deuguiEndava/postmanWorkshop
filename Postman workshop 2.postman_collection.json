{
	"info": {
		"_postman_id": "b359c5bb-2d51-4a46-aae0-31763847fc9c",
		"name": "Postman workshop 2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Data Provider 1",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var dataProvider = pm.environment.get(\"dataProvider\");\r",
							"\r",
							"if (dataProvider == null || dataProvider == \"\") {\r",
							"    dataProvider = [\r",
							"        \"Uruguay\",\r",
							"        \"Colombia\",\r",
							"        \"Ecuador\",\r",
							"        \"Argentina\",\r",
							"        \"Paraguay\",\r",
							"        \"Bolivia\"\r",
							"    ];\r",
							"}\r",
							"\r",
							"pm.environment.set(\"dataProviderValue\", dataProvider.shift());\r",
							"pm.environment.set(\"dataProvider\", dataProvider);\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const dataProvider = pm.environment.get(\"dataProvider\");\r",
							"\r",
							"pm.test(\"TC-01 Data provider 1\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"if (dataProvider.length > 0) {\r",
							"    postman.setNextRequest(\"Data Provider 1\");\r",
							"} else {\r",
							"    // Clear all variables created in the Pre-request script used for dataProvider\r",
							"    pm.environment.set(\"dataProvider\", null);\r",
							"    pm.environment.set(\"dataProviderValue\", null);\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "c233ceafd74c54c4026c87485be922d5",
							"type": "string"
						},
						{
							"key": "key",
							"value": "access_key",
							"type": "string"
						},
						{
							"key": "in",
							"value": "query",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://api.weatherstack.com/current?&query={{dataProviderValue}}",
					"protocol": "http",
					"host": [
						"api",
						"weatherstack",
						"com"
					],
					"path": [
						"current"
					],
					"query": [
						{
							"key": null,
							"value": null
						},
						{
							"key": "query",
							"value": "{{dataProviderValue}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Data Provider 2",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var dataProvider = pm.environment.get(\"dataProvider\");\r",
							"\r",
							"if (dataProvider == null || dataProvider == \"\") {\r",
							"\r",
							"    dataProvider = [\r",
							"        {\r",
							"            dataProviderValue: \"Uruguay\",\r",
							"            expectedValue: {\r",
							"                query: \"Montevideo, Uruguay\",\r",
							"                name: \"Montevideo\",\r",
							"                country: \"Uruguay\",\r",
							"            },\r",
							"            failureMessage: (\"Search using key: 'Uruguay' is falling\")\r",
							"        },\r",
							"        {\r",
							"            dataProviderValue: \"Colombia\",\r",
							"            expectedValue: {\r",
							"                query: \"Bogota, Colombia\",\r",
							"                name: \"Colombia\",\r",
							"                country: \"Colombia\",\r",
							"            },\r",
							"            failureMessage: (\"Search using key: 'Colombia' is falling\")\r",
							"        },\r",
							"        {\r",
							"            dataProviderValue: \"Argentina\",\r",
							"            expectedValue: {\r",
							"                query: \"Buenos Aires, Argentina\",\r",
							"                name: \"Buenos Aires\",\r",
							"                country: \"Argentina\",\r",
							"            },\r",
							"            failureMessage: (\"Search using key: 'Argentina' is falling\")\r",
							"        },\r",
							"        {\r",
							"            dataProviderValue: \"New York\",\r",
							"            expectedValue: {\r",
							"                query: \"New York, United States of America\",\r",
							"                name: \"New York\",\r",
							"                country: \"United States of America\",\r",
							"            },\r",
							"            failureMessage: (\"Search using key: 'New York' is falling\")\r",
							"        }\r",
							"    ];\r",
							"}\r",
							"\r",
							"var dataObj = dataProvider.shift();\r",
							"pm.environment.set(\"dataProvider\", dataProvider);\r",
							"pm.environment.set(\"dataProviderValue\", dataObj.dataProviderValue);\r",
							"pm.environment.set(\"expectedValue\", dataObj.expectedValue);\r",
							"pm.environment.set(\"failureMessage\", dataObj.failureMessage);\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const dataProvider = pm.environment.get(\"dataProvider\");\r",
							"\r",
							"pm.test(\"TC-02 Data provider 2\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    const response = String(responseBody);\r",
							"    pm.expect(response).contains(pm.environment.get(\"expectedValue\").query, \"FAILURE: \" + pm.environment.get(\"failureMessage\"));\r",
							"    pm.expect(response).contains(pm.environment.get(\"expectedValue\").name, \"FAILURE: \" + pm.environment.get(\"failureMessage\"));\r",
							"    pm.expect(response).contains(pm.environment.get(\"expectedValue\").country, \"FAILURE: \" + pm.environment.get(\"failureMessage\"));\r",
							"});\r",
							"\r",
							"if (dataProvider.length > 0) {\r",
							"    postman.setNextRequest(\"Data Provider 2\");\r",
							"} else {\r",
							"    // Clear all variables created in the Pre-request script used for dataProvider\r",
							"    pm.environment.set(\"dataProvider\", null);\r",
							"    pm.environment.set(\"dataProviderValue\", null);\r",
							"    pm.environment.set(\"expectedValue\", null);\r",
							"    pm.environment.set(\"failureMessage\", null);\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "c233ceafd74c54c4026c87485be922d5",
							"type": "string"
						},
						{
							"key": "key",
							"value": "access_key",
							"type": "string"
						},
						{
							"key": "in",
							"value": "query",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://api.weatherstack.com/current?&query={{dataProviderValue}}",
					"protocol": "http",
					"host": [
						"api",
						"weatherstack",
						"com"
					],
					"path": [
						"current"
					],
					"query": [
						{
							"key": null,
							"value": null
						},
						{
							"key": "query",
							"value": "{{dataProviderValue}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Using methods",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseSchemas = eval(globals.loadResponseSchemas);\r",
							"\r",
							"const schema = responseSchemas.getPokemonSchema();\r",
							"\r",
							"pm.test(\"TC-03 Using methods\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://pokeapi.co/api/v2/pokemon/",
					"protocol": "https",
					"host": [
						"pokeapi",
						"co"
					],
					"path": [
						"api",
						"v2",
						"pokemon",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Using async methods",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let pokemonList = pm.environment.get(\"pokemonList\");\r",
							"const pokemonUtils = eval(globals.loadPokemonUtils);\r",
							"const _dummy = setInterval(() => { }, 3000);\r",
							"\r",
							"(async function main() {\r",
							"\r",
							"    if (pokemonList == undefined || pokemonList == null) {\r",
							"        pokemonList = await pokemonUtils.getAllPokemonList();\r",
							"    }\r",
							"\r",
							"    const pokemonObj = pokemonList.shift();\r",
							"    pm.environment.set(\"pokemonList\", pokemonList);\r",
							"    pm.environment.set(\"pokemonName\", pokemonObj.name);\r",
							"\r",
							"    clearInterval(_dummy)\r",
							"})();\r",
							"\r",
							"\r",
							" /*\r",
							"\r",
							"clearInterval()\r",
							"The clearInterval() function in javascript clears the interval which has been set by setInterval() function before that.\r",
							"\r",
							"setInterval() function takes two parameters. First a function to be executed and second after how much time (in ms).\r",
							"setInterval() executes the passed function for the given time interval. The number id value returned by setInterval() function is stored in a variable and itâ€™s passed into the clearInterval() function to clear the interval.\r",
							"\r",
							"*/"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const pokemonList = pm.environment.get(\"pokemonList\");\r",
							"const pokemonName = pm.environment.get(\"pokemonName\");\r",
							"\r",
							"pm.test(\"TC-04 Using async methods\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    var response = JSON.parse(responseBody);\r",
							"    pm.expect(response.name).equals(pokemonName, \"Was not possible to get: \" + pokemonName + \" using search endpoint\");\r",
							"});\r",
							"\r",
							"if (pokemonList.length > 0) {\r",
							"    postman.setNextRequest(\"Using async methods\");\r",
							"} else {\r",
							"    // Clear all variables created in the Pre-request script used for dataProvider\r",
							"    pm.environment.set(\"pokemonList\", null);\r",
							"    pm.environment.set(\"pokemonName\", null);\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://pokeapi.co/api/v2/pokemon/{{pokemonName}}",
					"protocol": "https",
					"host": [
						"pokeapi",
						"co"
					],
					"path": [
						"api",
						"v2",
						"pokemon",
						"{{pokemonName}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.globals.set('loadUtils', function loadUtils() {",
					"    let utils = {};",
					"",
					"    // Return currentDate",
					"    utils.getCurrentDate = function () {",
					"        var moment = require('moment');",
					"        var currentDate = moment().format((\"yyyy-MM-DDTHH:mm:ss\"));",
					"        return currentDate;",
					"    }",
					"",
					"    return utils;",
					"} + '; loadUtils();');",
					"",
					"//------------------- SEND REQUEST METHODS --------------",
					"pm.globals.set('loadPokemonUtils', function loadPokemonUtils() {",
					"    const pokemonUtils = {};",
					"",
					"    pokemonUtils.getAllPokemonList = function () {",
					"        return new Promise((resolve, reject) => {",
					"            pm.sendRequest(",
					"                {",
					"                    url: \"https://pokeapi.co/api/v2/pokemon/\",",
					"                    method: 'GET',",
					"                    header: {",
					"                        'Content-Type': 'application/json',",
					"                    }",
					"                }, function (err, res) {",
					"                    if (err) {",
					"                        return reject(err);",
					"                    }",
					"                    return resolve(res.json().results);",
					"                })",
					"        });",
					"    }",
					"",
					"    return pokemonUtils;",
					"} + \"; loadPokemonUtils();\");",
					"",
					"//---------------------------------------------------",
					"",
					"pm.globals.set('loadResponseSchemas', function loadResponseSchemas() {",
					"    let schemas = {};",
					"",
					"    schemas.getPokemonSchema = function () {",
					"        return {",
					"            \"type\": \"object\",",
					"            \"properties\": {",
					"                \"count\": {",
					"                    \"type\": \"integer\"",
					"                },",
					"                \"next\": {",
					"                    \"type\": \"string\"",
					"                },",
					"                \"previous\": {",
					"                    \"type\": \"null\"",
					"                },",
					"                \"results\": {",
					"                    \"type\": \"array\",",
					"                    \"items\": [",
					"                        {",
					"                            \"type\": \"object\",",
					"                            \"properties\": {",
					"                                \"name\": {",
					"                                    \"type\": \"string\"",
					"                                },",
					"                                \"url\": {",
					"                                    \"type\": \"string\"",
					"                                }",
					"                            },",
					"                            \"required\": [",
					"                                \"name\",",
					"                                \"url\"",
					"                            ]",
					"                        },",
					"                        {",
					"                            \"type\": \"object\",",
					"                            \"properties\": {",
					"                                \"name\": {",
					"                                    \"type\": \"string\"",
					"                                },",
					"                                \"url\": {",
					"                                    \"type\": \"string\"",
					"                                }",
					"                            },",
					"                            \"required\": [",
					"                                \"name\",",
					"                                \"url\"",
					"                            ]",
					"                        },",
					"                        {",
					"                            \"type\": \"object\",",
					"                            \"properties\": {",
					"                                \"name\": {",
					"                                    \"type\": \"string\"",
					"                                },",
					"                                \"url\": {",
					"                                    \"type\": \"string\"",
					"                                }",
					"                            },",
					"                            \"required\": [",
					"                                \"name\",",
					"                                \"url\"",
					"                            ]",
					"                        },",
					"                        {",
					"                            \"type\": \"object\",",
					"                            \"properties\": {",
					"                                \"name\": {",
					"                                    \"type\": \"string\"",
					"                                },",
					"                                \"url\": {",
					"                                    \"type\": \"string\"",
					"                                }",
					"                            },",
					"                            \"required\": [",
					"                                \"name\",",
					"                                \"url\"",
					"                            ]",
					"                        },",
					"                        {",
					"                            \"type\": \"object\",",
					"                            \"properties\": {",
					"                                \"name\": {",
					"                                    \"type\": \"string\"",
					"                                },",
					"                                \"url\": {",
					"                                    \"type\": \"string\"",
					"                                }",
					"                            },",
					"                            \"required\": [",
					"                                \"name\",",
					"                                \"url\"",
					"                            ]",
					"                        },",
					"                        {",
					"                            \"type\": \"object\",",
					"                            \"properties\": {",
					"                                \"name\": {",
					"                                    \"type\": \"string\"",
					"                                },",
					"                                \"url\": {",
					"                                    \"type\": \"string\"",
					"                                }",
					"                            },",
					"                            \"required\": [",
					"                                \"name\",",
					"                                \"url\"",
					"                            ]",
					"                        },",
					"                        {",
					"                            \"type\": \"object\",",
					"                            \"properties\": {",
					"                                \"name\": {",
					"                                    \"type\": \"string\"",
					"                                },",
					"                                \"url\": {",
					"                                    \"type\": \"string\"",
					"                                }",
					"                            },",
					"                            \"required\": [",
					"                                \"name\",",
					"                                \"url\"",
					"                            ]",
					"                        },",
					"                        {",
					"                            \"type\": \"object\",",
					"                            \"properties\": {",
					"                                \"name\": {",
					"                                    \"type\": \"string\"",
					"                                },",
					"                                \"url\": {",
					"                                    \"type\": \"string\"",
					"                                }",
					"                            },",
					"                            \"required\": [",
					"                                \"name\",",
					"                                \"url\"",
					"                            ]",
					"                        },",
					"                        {",
					"                            \"type\": \"object\",",
					"                            \"properties\": {",
					"                                \"name\": {",
					"                                    \"type\": \"string\"",
					"                                },",
					"                                \"url\": {",
					"                                    \"type\": \"string\"",
					"                                }",
					"                            },",
					"                            \"required\": [",
					"                                \"name\",",
					"                                \"url\"",
					"                            ]",
					"                        },",
					"                        {",
					"                            \"type\": \"object\",",
					"                            \"properties\": {",
					"                                \"name\": {",
					"                                    \"type\": \"string\"",
					"                                },",
					"                                \"url\": {",
					"                                    \"type\": \"string\"",
					"                                }",
					"                            },",
					"                            \"required\": [",
					"                                \"name\",",
					"                                \"url\"",
					"                            ]",
					"                        },",
					"                        {",
					"                            \"type\": \"object\",",
					"                            \"properties\": {",
					"                                \"name\": {",
					"                                    \"type\": \"string\"",
					"                                },",
					"                                \"url\": {",
					"                                    \"type\": \"string\"",
					"                                }",
					"                            },",
					"                            \"required\": [",
					"                                \"name\",",
					"                                \"url\"",
					"                            ]",
					"                        },",
					"                        {",
					"                            \"type\": \"object\",",
					"                            \"properties\": {",
					"                                \"name\": {",
					"                                    \"type\": \"string\"",
					"                                },",
					"                                \"url\": {",
					"                                    \"type\": \"string\"",
					"                                }",
					"                            },",
					"                            \"required\": [",
					"                                \"name\",",
					"                                \"url\"",
					"                            ]",
					"                        },",
					"                        {",
					"                            \"type\": \"object\",",
					"                            \"properties\": {",
					"                                \"name\": {",
					"                                    \"type\": \"string\"",
					"                                },",
					"                                \"url\": {",
					"                                    \"type\": \"string\"",
					"                                }",
					"                            },",
					"                            \"required\": [",
					"                                \"name\",",
					"                                \"url\"",
					"                            ]",
					"                        },",
					"                        {",
					"                            \"type\": \"object\",",
					"                            \"properties\": {",
					"                                \"name\": {",
					"                                    \"type\": \"string\"",
					"                                },",
					"                                \"url\": {",
					"                                    \"type\": \"string\"",
					"                                }",
					"                            },",
					"                            \"required\": [",
					"                                \"name\",",
					"                                \"url\"",
					"                            ]",
					"                        },",
					"                        {",
					"                            \"type\": \"object\",",
					"                            \"properties\": {",
					"                                \"name\": {",
					"                                    \"type\": \"string\"",
					"                                },",
					"                                \"url\": {",
					"                                    \"type\": \"string\"",
					"                                }",
					"                            },",
					"                            \"required\": [",
					"                                \"name\",",
					"                                \"url\"",
					"                            ]",
					"                        },",
					"                        {",
					"                            \"type\": \"object\",",
					"                            \"properties\": {",
					"                                \"name\": {",
					"                                    \"type\": \"string\"",
					"                                },",
					"                                \"url\": {",
					"                                    \"type\": \"string\"",
					"                                }",
					"                            },",
					"                            \"required\": [",
					"                                \"name\",",
					"                                \"url\"",
					"                            ]",
					"                        },",
					"                        {",
					"                            \"type\": \"object\",",
					"                            \"properties\": {",
					"                                \"name\": {",
					"                                    \"type\": \"string\"",
					"                                },",
					"                                \"url\": {",
					"                                    \"type\": \"string\"",
					"                                }",
					"                            },",
					"                            \"required\": [",
					"                                \"name\",",
					"                                \"url\"",
					"                            ]",
					"                        },",
					"                        {",
					"                            \"type\": \"object\",",
					"                            \"properties\": {",
					"                                \"name\": {",
					"                                    \"type\": \"string\"",
					"                                },",
					"                                \"url\": {",
					"                                    \"type\": \"string\"",
					"                                }",
					"                            },",
					"                            \"required\": [",
					"                                \"name\",",
					"                                \"url\"",
					"                            ]",
					"                        },",
					"                        {",
					"                            \"type\": \"object\",",
					"                            \"properties\": {",
					"                                \"name\": {",
					"                                    \"type\": \"string\"",
					"                                },",
					"                                \"url\": {",
					"                                    \"type\": \"string\"",
					"                                }",
					"                            },",
					"                            \"required\": [",
					"                                \"name\",",
					"                                \"url\"",
					"                            ]",
					"                        },",
					"                        {",
					"                            \"type\": \"object\",",
					"                            \"properties\": {",
					"                                \"name\": {",
					"                                    \"type\": \"string\"",
					"                                },",
					"                                \"url\": {",
					"                                    \"type\": \"string\"",
					"                                }",
					"                            },",
					"                            \"required\": [",
					"                                \"name\",",
					"                                \"url\"",
					"                            ]",
					"                        }",
					"                    ]",
					"                }",
					"            },",
					"            \"required\": [",
					"                \"count\",",
					"                \"next\",",
					"                \"previous\",",
					"                \"results\"",
					"            ]",
					"        }",
					"    }",
					"",
					"    return schemas;",
					"} + \"; loadResponseSchemas();\");",
					"",
					"",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}